{
	"info": {
		"_postman_id": "e55963cc-bba0-446c-aa44-c971bbc3565d",
		"name": "yieldPrediction",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Update User",
					"item": [
						{
							"name": "Update - All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"New User Not Created\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.id).to.eql(pm.collectionVariables.get(\"latestID\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Email Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.email).to.eql(\"newEmail@test.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"First Name Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.firstName).to.eql(\"newFirstname\");\r",
											"});\r",
											"\r",
											"pm.test(\"Last Name Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.lastName).to.eql(\"newLastName\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\" : \"newEmail@test.com\",\r\n    \"password\" : \"newPassword\",\r\n    \"firstName\" : \"newFirstname\",\r\n    \"lastName\" : \"newLastName\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-url}}user/{{latestID}}",
									"host": [
										"{{api-url}}user"
									],
									"path": [
										"{{latestID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update - Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"New User Not Created\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.id).to.eql(pm.collectionVariables.get(\"latestID\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Email Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.email).to.eql(\"newEmail@test.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"First Name Not Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Last Name Not Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\" : \"newEmail@test.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-url}}user/{{latestID}}",
									"host": [
										"{{api-url}}user"
									],
									"path": [
										"{{latestID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update - password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"New User Not Created\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.id).to.eql(pm.collectionVariables.get(\"latestID\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Email Not Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
											"});\r",
											"\r",
											"pm.test(\"First Name Not Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Last Name Not Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\" : \"newPassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-url}}user/{{latestID}}",
									"host": [
										"{{api-url}}user"
									],
									"path": [
										"{{latestID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update - firstName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"New User Not Created\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.id).to.eql(pm.collectionVariables.get(\"latestID\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Email Not Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
											"});\r",
											"\r",
											"pm.test(\"First Name Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.firstName).to.eql(\"newFirstname\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Last Name Not Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\" : \"newFirstname\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-url}}user/{{latestID}}",
									"host": [
										"{{api-url}}user"
									],
									"path": [
										"{{latestID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update - lastName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"New User Not Created\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.id).to.eql(pm.collectionVariables.get(\"latestID\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Email Not Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
											"});\r",
											"\r",
											"pm.test(\"First Name Not Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Last Name Updated\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.lastName).to.eql(\"newLastName\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastName\" : \"newLastName\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-url}}user/{{latestID}}",
									"host": [
										"{{api-url}}user"
									],
									"path": [
										"{{latestID}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.collectionVariables.get(\"api-url\") + 'user/' + pm.collectionVariables.get(\"latestID\"),",
									"    method: 'DELETE',",
									"    header: {'content-type': 'application/json', \"authorization\" : \"7f,P[CMH4>@bDP6U>fnGp2)TpnVn>;4_\"},",
									"    body: {}",
									"}, function (err, res) {",
									"    console.log(res);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url: pm.collectionVariables.get(\"api-url\") + 'user',",
									"    method: 'POST',",
									"    header: {'content-type': 'application/json'},",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({ ",
									"            email: pm.collectionVariables.get(\"email\"), ",
									"            password: pm.collectionVariables.get(\"password\"),",
									"            firstName : pm.collectionVariables.get(\"firstName\"),",
									"            lastName: pm.collectionVariables.get(\"lastName\") })",
									"    }",
									"}, function (err, res) {",
									"    console.log(res);",
									"    pm.collectionVariables.set(\"latestID\", res.json().user.id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Register User",
					"item": [
						{
							"name": "Register - New Accout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"latestID\", pm.response.json().user.id);\r",
											"\r",
											"pm.test(\"Email\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
											"});\r",
											"\r",
											"pm.test(\"First Name\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Last Name\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"lastName\": \"{{lastName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/user",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - No Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\" : {{password}},\r\n    \"firstName\" : {{firstName}},\r\n    \"lastName\" : {{lastName}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/user",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register  - No Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"lastName\": \"{{lastName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/user",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - No First Name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"lastName\": \"{{lastName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/user",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - No Last Name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"firstName\": \"{{firstName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/user",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user"
									]
								},
								"description": "Edward: <b>This request actually passes. Something wrong with PostMan?</b>"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.collectionVariables.get(\"api-url\") + 'user/' + pm.collectionVariables.get(\"latestID\"),",
									"    method: 'DELETE',",
									"    header: {'content-type': 'application/json', \"authorization\" : \"7f,P[CMH4>@bDP6U>fnGp2)TpnVn>;4_\"},",
									"    body: {}",
									"}, function (err, res) {",
									"    console.log(res);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Login user",
					"item": [
						{
							"name": "Login - Correct Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correct ID\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.id).to.eql(pm.collectionVariables.get(\"latestID\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Email\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
											"});\r",
											"\r",
											"pm.test(\"First Name\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Last Name\", () => {\r",
											"  const responseJson = pm.response.json();\r",
											"  pm.expect(responseJson.user.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/user",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user"
									],
									"query": [
										{
											"key": "email",
											"value": "admin@admin.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "admin",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - Incorrect Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", () => {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"notCorrect\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/user",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user"
									],
									"query": [
										{
											"key": "email",
											"value": "admin@admin.com",
											"disabled": true
										},
										{
											"key": "password",
											"value": "admin",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.collectionVariables.get(\"api-url\") + 'user',",
									"    method: 'POST',",
									"    header: {'content-type': 'application/json'},",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({ ",
									"            email: pm.collectionVariables.get(\"email\"), ",
									"            password: pm.collectionVariables.get(\"password\"),",
									"            firstName : pm.collectionVariables.get(\"firstName\"),",
									"            lastName: pm.collectionVariables.get(\"lastName\") })",
									"    }",
									"}, function (err, res) {",
									"    console.log(res);",
									"    pm.collectionVariables.set(\"latestID\", res.json().user.id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Get User",
					"item": [
						{
							"name": "Get User",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "authorization",
										"value": "7f,P[CMH4>@bDP6U>fnGp2)TpnVn>;4_",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/user/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"user",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Paddocks",
			"item": [
				{
					"name": "Post paddock",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"paddock\" : {\r\n        \"name\" : \"test\",\r\n        \"size_ha\" : 10,\r\n        \"rowSpacing_cm\" : 10,\r\n        \"cropType\" : \"Wheat\",\r\n        \"grainsPerHead\" : 20,\r\n        \"grainHeads_pm2\" : 20,\r\n        \"postCode\" : 4103\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/user/1/paddocks",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"user",
								"1",
								"paddocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get paddocks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:4000/user/1/paddocks",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "4000",
							"path": [
								"user",
								"1",
								"paddocks"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Yields",
			"item": [
				{
					"name": "Get yields",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:4000/user/1/paddocks/26/yields",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "4000",
							"path": [
								"user",
								"1",
								"paddocks",
								"26",
								"yields"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get yields Copy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"yield\" : {\r\n                \"harvest_t\": 100,\r\n                \"date\": \"1985-04-12T23:20:50.52Z\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/user/1/paddocks/1/yields",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"user",
								"1",
								"paddocks",
								"1",
								"yields"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Predictions",
			"item": [
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "7f,P[CMH4>@bDP6U>fnGp2)TpnVn>;4_",
				"type": "string"
			},
			{
				"key": "key",
				"value": "authorization",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api-url",
			"value": "http://127.0.0.1:8000/"
		},
		{
			"key": "api-register",
			"value": "user"
		},
		{
			"key": "api-login",
			"value": "user"
		},
		{
			"key": "email",
			"value": "test@test.com"
		},
		{
			"key": "password",
			"value": "test"
		},
		{
			"key": "firstName",
			"value": "Sir"
		},
		{
			"key": "lastName",
			"value": "Johnson"
		},
		{
			"key": "latestID",
			"value": "1"
		}
	]
}